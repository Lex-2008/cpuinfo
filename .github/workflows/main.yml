name: Native build
on: [push]
jobs:
  native-build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu-latest
            artifact-path: cpu-info
          - name: windows-latest
            artifact-path: |
                Release
                Debug
          - name: macos-latest
            artifact-path: cpu-info
    runs-on: ${{ matrix.os.name }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out this repo
        uses: actions/checkout@v3

      - name: Cache vcpkg packages
        uses: actions/cache@v3
        with:
          key: vcpkg-deps-${{ hashFiles('vcpkg.json') }}
          path: ${{ runner.os == 'Windows' && 'C:\Users\runneradmin\AppData\Local\vcpkg\archives' || '~/.cache/vcpkg/archives' }}

      - run: cmake . --toolchain "$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"

      - run: cmake --build .

        # NOTE: on Windows, you must specify which configuration to test
        # https://gitlab.kitware.com/cmake/cmake/-/issues/20283
      - run: ctest ${{ runner.os == 'Windows' && '-C Debug' || '' }} 

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os.name }}
          path: ${{ matrix.os.artifact-path }}

  clean-machine-test:
    needs: native-build
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.os }}
      - run: ls -lah *
      - run: chmod a+x ./cpu-info && ./cpu-info
        if: runner.os != 'Windows'
      - run: chmod a+x */cpu-info && */cpu-info
        if: runner.os == 'Windows'
